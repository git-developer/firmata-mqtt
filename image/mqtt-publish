#!/bin/sh
#
# Publish firmata message as MQTT message
#
# Arguments: firmata message, e.g.
#
# pin name   value timestamp            duration        count total rate
# 9   boiler 1     1591428675.880354881 2.1215808391571 3     5     1696.85 W
set -eu

MQTT_TOPIC="${MQTT_TOPIC:-firmata}"
MQTT_TOPIC_APPEND_ID="${MQTT_TOPIC_APPEND_ID:-true}"
MQTT_TOPIC_APPEND_FORMAT="${MQTT_TOPIC_APPEND_FORMAT:-true}"

FORMAT_RAW="${FORMAT_RAW:-false}"
FORMAT_RAW_SEPARATOR="${FORMAT_RAW_SEPARATOR:- }"
FORMAT_JSON="${FORMAT_JSON:-true}"

cancel() {
  # local set is required because global has no effect, at least in busybox ash
  set -eu
  echo >&2 "Error: ${@}"
  return 1
}

publish() {
  format="${1}"
  id="${2}"
  message="${3}"

  topic="${MQTT_TOPIC}"
  [ ! "${MQTT_TOPIC_APPEND_ID}"     = 'true' ] || topic="${topic}/${id}"
  [ ! "${MQTT_TOPIC_APPEND_FORMAT}" = 'true' ] || topic="${topic}/${format}"
  printf "%s " '-t' "${topic}" '-m' "'${message}'" "${MQTT_OPTIONS-}" | xargs mosquitto_pub
}

build_raw_message() {
  printf "%s${FORMAT_RAW_SEPARATOR}" "${@}"
}

build_json_message() {
  [ ! "${#}" -lt "7" ] || cancel "too few arguments: '${@}'"
  # the 'read' builtin cannot be used here, because 'name' is allowed to be an
  # empty string and multiple occurrences of field separators are merged on
  # field splitting. For details, see
  # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05
  pin="${1}"
  name="${2}"
  value="${3}"
  timestamp="${4}"
  duration="${5}"
  count="${6}"
  total="${7}"
  rate="${8}"

  content='"pin":%i'
  [ -z "${name}" ] || content="${content}, \"name\":\"${name}\""
  [ -z "${rate}" ] || content="${content}, \"rate\":\"${rate}\""
  content="${content}, \"value\":%i, \"timestamp\":%.6f, \"duration\":%.6f, \"count\":%i, \"total\":%i"
  printf "{ ${content} }" "${pin}" "${value}" "${timestamp}" "${duration}" "${count}" "${total}"
}

main() {
  [ -n "${1-}" ] || cancel "No arguments"
  if [ "${FORMAT_RAW}"  = 'true' ]; then
    publish 'raw' "${1}" "$(build_raw_message "${@}")"
  fi
  if [ "${FORMAT_JSON}" = 'true' ]; then
    publish 'json' "${1}" "$(build_json_message "${@}")"
  fi
}

main "${@}"
